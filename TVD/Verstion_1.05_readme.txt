TVD mod
by Nickorr

-------------------------------------------

План построения / настройки миссии на ТВД:

1. Создать маркеры-зоны для захвата/удержания, назвать маркеры mZone_0, mZone_1 и т.д., в поле Text маркера вписать человеческое название зоны (отображается в дебриф-окне)


2. К каждой зоне привязать модуль WMT Point
	Если в поле "Изначальная сторона-владелец" указать сторону, не являющуюся одной из двух противоборствуютщих сторон, то зона будет отмечена как изначально нейтральная и никому изначального преимущества не добавит.
	Если включить параметр "Locked", то при отступлении стороны-владельца зоны, зона не будет передаваться врагу.

3. Прописать ценность важным юнитам (10 это обычный боец, 20 - комод, 40 - взводный, 100 - кс и тд) в ините:
	- Ценная техника - this setVariable ["TVD_UnitValue",[west,200]];
	- Командир стороны - this setVariable ["TVD_UnitValue",[west,100,"sideLeader"]];
	- КО (взводные в том числе - просто вместо 20 выставить 40) - this setVariable ["TVD_UnitValue",[west,20]];
	- Ценный солдат (не командир - о его смерти не пишется в лог) - this setVariable ["TVD_UnitValue",[west,40,"soldier"]];
Значение ценности должно быть кратным 2.
Для техники (ТОЛЬКО ДЛЯ ТЕХНИКИ) значение стороны можно вписывать 'sideLogic'. Тогда техника будет изначально нейтральной и в последствии даст бонус преимущества той стороне, что ее захватит (сторона получит 50% от значения ценности).

4. Создать тыловую зону для каждой стороны, куда они смогут отступить.
	Тыловая база (куда отступать) должна быть обрамлена триггером. Name триггера должен быть: 
	для стороны 0 - trgBase_side0
	для стороны 1 - trgBase_side1


5. Вызов из init.sqf:

5.1. Обозначить объекты-задачи (если имеются). Для этого init.sqf ПЕРЕД вызовом основного блока прописать:
	myObjectName1 setVariable ["TVD_TaskObject", [west, 500, "Грады уничтожены", true, ["false", "false", "false"]]];
	
	^ для каждого объекта-задачи.
	
	Где в setVariable:
	0 - сторона, которой назначена задача
	1 - цена вопроса
	2 - сообщение выполненной задачи
	3 - выводить ли всем сообщение о выполненной задаче
	4 - авто-завершение (задача выполнена) при завершении миссии [по-времени , по-потерям другой стороны , при-отступлении другой стороны]
	
	Объектом может быть:
		а) Триггер
			Условие выполнения может быть произвольным. 
			Срабатывание триггера должно быть "Once / Однократно".
			Чтобы миссия завершилась, все задачи должны быть обработаны - либо выполнены, либо отменены. Для этого в своем триггере или скрипте нужно обрабатывать условие:
				
				if (timeToEnd != -1) then {
					if (условия_задачи_выполнены) then {	
						side0Task_0 setTriggerStatements ["true", "", ""];			//Условия выполнены - задача отмечается выполненной
					} else {	
						side0Task_0 setVariable ["TVD_TaskObject", nil, true];		//Условия не выполнены - задача отменяется
					};
				};
				
				При завершении миссии переменная timeToEnd принимает одно из значений:
					0 - завершение админом
					1 - завершение по времени
					2 - завершение по потерям
					3 - завершение из-за отступления одной из сторон	
				
		б) Модуль задачи WMT
			- Процедура настройки модулей ВМТ обычная. НО ОБЯЗАТЕЛЬНО все целевые модули должны быть синхронизированы с модулем Compose, в котором в параметре "Количество целей" должно стоять число 99.
			- Параметр Name WMT-модуля должен быть указан (для нашего примера это myObjectName1).
			- Параметр "Message" можно не заполнять.
			- Модуль Compose в init.sqf вызывать не надо. Имя модулю давать тоже не обязательно. Он нужен лишь для того, чтобы при выполнении ВМТ-задач миссия не завершалась.
			- При завершении миссии если задача так и не была выполнена, она автоматически отменяется. Любая задача при любой причине завершения.
			- Принудительно пометить задачу выполненной:
				side0Task_0 setVariable ["WMT_TaskEnd", true, true];
	
	Отменить задачу:
		side0Task_0 setVariable ["TVD_TaskObjectStatus", "fail", true];
	
	Проверить, выполнена ли задача, можно запросом:
		(side0Task_0 getVariable "TVD_TaskObjectStatus") in ["success"]
	Проверить, отменена ли задача, можно запросом:
		(side0Task_0 getVariable "TVD_TaskObjectStatus") in ["fail"]
	Проверить, актуальна ли еще задача, можно запросом:
		(side0Task_0 getVariable "TVD_TaskObjectStatus") in ["success","fail"]
	
5.2. Далее вызвать основной блок:
	null = [
		sides, 				// - выставить стороны [Сторона0, Сторона1]
		capZonesCount, 		// - (не обязательно) указать количество захватываемых зон (0 - если нет зон). Зоны - в виде маркеров с Name - mZone_0 .. mZone_N-1 ).
		RetreatPossible, 	// - (не обязательно) имеет ли сторона возможность отступить. true - может, false - нет. порядок - [east, west, resistance]
		ZoneGain, 			// - (не обязательно) выставить цену одной зоны (не важно если TVD_capZonesCount = 0 ) 
		RetreatRatio		// - (не обязательно) порог потерь, начиная с которого стороне можно будет отступить
	] spawn compileFinal preprocessFileLineNumbers "TVD\TVD_Main.sqf";

------------------------------------------
	Пример со значениями по умолчанию:

	null = [
		[west, east], 
		0, 
		[true,true,true], 	// [east, west, resistance]
		50, 
		0.9
	] spawn compileFinal preprocessFileLineNumbers "TVD\TVD_Main.sqf";
------------------------------------------
	Пример с минимальными настройками (не указанные будут как в примере выше):

	null = [ [west, east] ] spawn compileFinal preprocessFileLineNumbers "TVD\TVD_Main.sqf";
------------------------------------------

6. Дополнительные скрипты TVD_Ext:
	Если нужны скрипты из папки TVD_Ext - первым делом подключить управляющий скрипт из init.sqf строкой:
		[] call compileFinal preprocessFileLineNumbers "TVD_Ext\TVD_fnc_init.sqf"
		
6.1. TVD_fnc_markBox.sqf
Если нужно подсветить на карте ящик (по образу WMT-маркеров на технику на старте), то в ините ящика вписать:
	
	this setVariable ["TVD_markBox", [west,"Ящик с Javelin + 2 ракеты"]];
-- первый параметр - сторона, которая увидит маркер. Второй - текст маркера.

6.2 TVD_frisk.sqf
Возможность лазить в инвентарь пленников и бойцов в бессознанке. Все работает автоматически.





-------------------------------------------
CHANGELOG:
1.05:
+ Добавлена возможность индивидуального отступления - любой боец стороны, зайдя в свою тыловую зону может отступить, сохранив за стороной очки за свою жизнь, и отправиться в спектатор.
* Исправлен баг при попытке отправить пленника в тыл стороны.
+ При смерти всех КО стороны, если исп.КС умер, должность исп.КСа перейдет к кому-то из простых солдат.
* Взятые в плен игроки не могут стать Исп.КС своей стороны при смерти КСа.
* Исправлен баг с дублированием смерти бойцов (запись в дебрифере и лишнее сообщение о смерти КСа всей стороне).


1.04:
* Поддержка WMT-Зон с параметром Locked - заблокированные зоны, которыми владеет сторона при ее отступлении не передаются врагу.
* У каждой зоны в массиве TVD_capZones теперь 3 параметра: [ИмяМаркера, Цвет-ПринадлежностьСтороне, Блокированный]
* Правка в формуле компенсации потерь при отступлении стороны. Теперь даже отрицательные значения обрабатываются правильно.
* Правка в формуле начинсления стороне очков за выполнение задач - теперь стороне не просто добавляется Н очков в TVD_sidesResScore, а дополняется начальный пул TVD_InitScore на Н очков у ДРУГОЙ стороны. Это убирает "призрачные числа" и возможность отрицательных значений.

1.03:
* Задача задается теперь такой строкой:
	myObjectName1 setVariable ["TVD_TaskObject", [west, 500, "Грады уничтожены", true, ["false", "false", "false"]]];
	(условия Boolean, а не Int, и в кавычках)
	(Условия в кавычках проверяются при инициализации и если в них ошибка, то выводится хинт)
* _TVD_RetreatRatio - значение по умолчанию изменено на 0.9
* Фикс уведомления о смерти КСа.
+ Возможность объявлять изначально нейтральные зоны и технику.

1.02:
* Мелкие правки в дебрифере.
* Статус пишется в лог не каждые 10, а каждые 5 минут.
* Убраны сообщения о смерти КО.
* При смерти КСа сообщение об этом теперь получает каждый боец стороны (а не только КО). Если заменить некому - сторона уведомляется, что КСа больше нет.
+ Добавлен TVD_TasksKeeper - контроль состояния задач. Поддерживаются два типа задания задачи: модулями ВМТ или триггером. При завершении миссии все задачи последний раз проверяются и либо отмечаются выполненными, либо отменяются.
+ Добавлена обработка завершения миссии по потерям стороны. Миссия не завершается мгновенно - игрокам дается от 2х до 5ти минут на то чтобы попытаться выполнить невыполненные задачи и получить больше преимущества. Сторона-победитель получает уведомление о том, что противник понес потери и таймер до конца (стандартно - 5 минут, если у стороны-победителя остались невыполненные задачи, иначе 2 минуты. Если у стороны есть КС/исп.КС, то он может продлить время на еще +5 минут). Сторона, понесшая потери никаких уведомлений не получает.